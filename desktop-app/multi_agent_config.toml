# Sentinel AI Multi-Agent System Configuration
# Version 6.0 - Enhanced Multi-Agent Architecture

[system]
version = "6.0"
name = "Sentinel AI Enhanced Multi-Agent System"
description = "Advanced multi-agent system with collaborative workflows and adaptive learning"

[multi_agent]
# Core multi-agent system settings
enabled = true
max_concurrent_workflows = 10
agent_timeout = 300
communication_protocol = "async_messaging"
learning_enabled = true
learning_rate = 0.1

[agents]
# Agent pool configuration
max_agents_per_type = 5
agent_initialization_timeout = 30

[agents.research]
enabled = true
specializations = ["technical_research", "market_research", "competitive_analysis"]
max_concurrent_tasks = 3
skill_level_initial = 0.8
tools = ["web_search", "document_analysis", "data_extraction"]

[agents.planning]
enabled = true
specializations = ["strategic_planning", "resource_allocation", "risk_assessment"]
max_concurrent_tasks = 2
skill_level_initial = 0.9
tools = ["planning_frameworks", "optimization_algorithms", "timeline_management"]

[agents.development] 
enabled = true
specializations = ["backend_development", "frontend_development", "infrastructure"]
max_concurrent_tasks = 4
skill_level_initial = 0.85
tools = ["code_generation", "architecture_design", "deployment_automation"]

[agents.review]
enabled = true
specializations = ["code_review", "security_audit", "performance_analysis"]
max_concurrent_tasks = 3
skill_level_initial = 0.9
tools = ["static_analysis", "security_scanning", "performance_profiling"]

[agents.testing]
enabled = true
specializations = ["unit_testing", "integration_testing", "performance_testing"]
max_concurrent_tasks = 3
skill_level_initial = 0.8
tools = ["test_frameworks", "automation_tools", "performance_benchmarking"]

[workflows]
# Workflow pattern configurations
default_pattern = "research_and_development"

[workflows.sequential]
enabled = true
description = "Sequential execution: Research → Planning → Development → Review → Testing"
timeout = 1800
retry_attempts = 2

[workflows.collaborative]
enabled = true 
description = "Collaborative execution: Multiple agents working together simultaneously"
timeout = 1200
max_collaborators = 3

[workflows.parallel]
enabled = true
description = "Parallel execution: Independent tasks running concurrently"
timeout = 900
max_parallel_tasks = 5

[workflows.adaptive]
enabled = true
description = "Adaptive execution: Workflow changes based on intermediate results"
timeout = 2400
adaptation_threshold = 0.7

[communication]
# Inter-agent communication settings
protocol = "message_passing"
queue_size = 1000
message_timeout = 60
broadcast_enabled = true
collaboration_preference = 0.8

[observability]
# Enhanced observability configuration  
enabled = true
event_retention_days = 30
performance_tracking = true
agent_metrics_collection = true
workflow_analytics = true
real_time_monitoring = true

[observability.metrics]
track_execution_time = true
track_success_rates = true
track_agent_performance = true
track_collaboration_efficiency = true
track_learning_progress = true

[learning]
# Agent learning and adaptation
enabled = true
learning_algorithm = "reinforcement"
adaptation_rate = 0.1
knowledge_retention_days = 90
skill_improvement_threshold = 0.05

[learning.knowledge_base]
enabled = true
max_entries = 10000
semantic_search = true
knowledge_sharing = true

[optimization]
# Self-optimization settings
periodic_optimization = true
optimization_interval_hours = 6
performance_analysis_depth = "comprehensive"
auto_apply_improvements = false  # Require human approval

[integration]
# Integration with existing Sentinel AI components
cognitive_forge_integration = true
database_integration = true
observability_integration = true
api_integration = true

[integration.fallback]
# Fallback behavior when components are unavailable
enable_fallback = true
fallback_to_simulation = true
fallback_timeout = 60

[performance]
# Performance optimization settings
async_execution = true
connection_pooling = true
caching_enabled = true
cache_ttl_seconds = 3600
max_memory_usage_mb = 2048

[security]
# Security configuration
agent_isolation = true
secure_communication = true
audit_logging = true
vulnerability_scanning = true

[deployment]
# Deployment configuration
environment = "production"
scaling_enabled = true
auto_scaling_threshold = 0.8
max_instances = 10
health_check_interval = 30

[logging]
# Logging configuration
level = "INFO"
format = "json"
include_agent_context = true
include_workflow_context = true
log_performance_metrics = true

[api]
# API configuration for multi-agent system
enabled = true
version = "v1"
rate_limiting = true
rate_limit_requests_per_minute = 1000
authentication_required = false  # For internal use

[monitoring]
# System monitoring
health_checks = true
performance_monitoring = true
error_tracking = true
alert_thresholds = {
    success_rate_min = 0.9,
    response_time_max = 5.0,
    memory_usage_max = 0.8
}

# Environment-specific overrides
[environments.development]
logging.level = "DEBUG"
agents.*.max_concurrent_tasks = 1
workflows.*.timeout = 300

[environments.testing]
learning.enabled = false
optimization.periodic_optimization = false
agents.*.max_concurrent_tasks = 2

[environments.production]
security.agent_isolation = true
deployment.scaling_enabled = true
optimization.auto_apply_improvements = false